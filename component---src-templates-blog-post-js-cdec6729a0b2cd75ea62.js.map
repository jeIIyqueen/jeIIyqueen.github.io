{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","disqusConfig","identifier","id","frontmatter","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_seo__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","_components_bio__WEBPACK_IMPORTED_MODULE_4__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","disqus_react__WEBPACK_IMPORTED_MODULE_8__","shortname","config","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","githubTheme","overrideThemeStyles","body","background","a, strong","color","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Layout","header","_this$props","boxShadow","textDecoration","fontFamily","marginLeft","marginRight","maxWidth","Date","getFullYear","href","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","facebook","_public_static_d_3539435762_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-cdec6729a0b2cd75ea62.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport { DiscussionEmbed } from \"disqus-react\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const disqusShortname = \"jellyqueen\"\n    const disqusConfig = {\n      identifier: post.id,\n      title: post.frontmatter.title,\n    }\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n        <DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport githubTheme from 'typography-theme-github'\n\ngithubTheme.overrideThemeStyles = () => ({\n  'body': {\n    background: \"#fbfafc\"\n  },\n  'a, strong': {\n    color: \"#be9981\"\n  }\n})\n\nconst typography = new Typography(githubTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: rhythm(1.5),\n          }}\n        >\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://github.com/jeIIyqueen\">jeIIyqueen</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              '길 위의 생명에게 도움의 손길을, 레스켓'의 개발자 <strong>{author}</strong>들이 작성하는 기술블로그입니다.\n              {` `}\n              <a href={`https://github.com/jeIIyqueen`}>\n                깃허브\n              </a>와{` `} \n              <a href={`https://facebook.com/${social.facebook}`}>\n                페이스북\n              </a>\n              에서도 만나볼 수 있습니다.\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/rescat_main.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          facebook\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}